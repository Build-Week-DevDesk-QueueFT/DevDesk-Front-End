{"ast":null,"code":"var _jsxFileName = \"/Users/lambda_school_loaner_277/Desktop/coding/DevDesk-Front-End/dev/src/components/student/Student.js\";\nimport React, { useState, useEffect, useContext } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport StudentCard from \"../student/StudentCard\";\nimport { UserContext } from \"../../contexts/AppContext\";\nimport { axiosWithAuth } from \"../../utils/axiosWithAuth\";\n\nconst postNewStudent = (newStudent, refreshStudent) => {\n  axiosWithAuth().post(\"/api/tickets\", newStudent).then(res => {\n    console.log(res.data);\n    refreshStudent();\n  }).catch(err => {\n    console.log(err, \"Failed to post new student\");\n  });\n};\n\nconst Student = props => {\n  const [student, setStudent] = useState([]);\n  const [setUser] = useContext(UserContext);\n\n  const refreshStudent = props => {\n    axiosWithAuth().get(\"/api/tickets\").then(res => {\n      console.log(res);\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n\n  useEffect(() => {\n    refreshStudent();\n  }, []);\n\n  const submitStudent = data => {\n    console.log(data);\n    postNewStudent({\n      title: props.title,\n      description: props.description,\n      tried: props.tried,\n      category: props.category\n    }, refreshStudent);\n  };\n\n  const {\n    register,\n    handleSubmit,\n    errors\n  } = useForm();\n  console.log(errors);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit(submitStudent),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Title\",\n    name: \"Title\",\n    ref: register({\n      required: true,\n      min: 2,\n      maxLength: 80\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"textarea\", {\n    name: \"Description\",\n    placeholder: \"Description\",\n    ref: register({\n      required: true,\n      max: 2,\n      maxLength: 300\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Tried\",\n    name: \"Tried\",\n    ref: register({\n      required: true,\n      min: 2,\n      maxLength: 128\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Category\",\n    name: \"Category\",\n    ref: register({\n      required: true,\n      min: 2,\n      maxLength: 128\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"studentList\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }, student.map((student, index) => /*#__PURE__*/React.createElement(StudentCard, {\n    student: student,\n    refreshStudent: refreshStudent,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }\n  })))));\n};\n\nexport default Student;","map":{"version":3,"sources":["/Users/lambda_school_loaner_277/Desktop/coding/DevDesk-Front-End/dev/src/components/student/Student.js"],"names":["React","useState","useEffect","useContext","useForm","StudentCard","UserContext","axiosWithAuth","postNewStudent","newStudent","refreshStudent","post","then","res","console","log","data","catch","err","Student","props","student","setStudent","setUser","get","error","submitStudent","title","description","tried","category","register","handleSubmit","errors","required","min","maxLength","max","map","index"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport StudentCard from \"../student/StudentCard\";\nimport { UserContext } from \"../../contexts/AppContext\";\nimport { axiosWithAuth } from \"../../utils/axiosWithAuth\";\n\nconst postNewStudent = (newStudent, refreshStudent) => {\n  axiosWithAuth()\n    .post(\"/api/tickets\", newStudent)\n    .then((res) => {\n      console.log(res.data);\n      refreshStudent();\n    })\n    .catch((err) => {\n      console.log(err, \"Failed to post new student\");\n    });\n};\n\nconst Student = (props) => {\n  const [student, setStudent] = useState([]);\n\n  const [setUser] = useContext(UserContext);\n\n  const refreshStudent = (props) => {\n    axiosWithAuth()\n      .get(\"/api/tickets\")\n      .then((res) => {\n        console.log(res);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  useEffect(() => {\n    refreshStudent();\n  }, []);\n\n  const submitStudent = (data) => {\n    console.log(data);\n    postNewStudent(\n      {\n        title: props.title,\n        description: props.description,\n        tried: props.tried,\n        category: props.category,\n      },\n      refreshStudent\n    );\n  };\n\n  const { register, handleSubmit, errors } = useForm();\n  console.log(errors);\n\n  return (\n    <>\n      <form onSubmit={handleSubmit(submitStudent)}>\n        <input\n          type=\"text\"\n          placeholder=\"Title\"\n          name=\"Title\"\n          ref={register({ required: true, min: 2, maxLength: 80 })}\n        />\n        <textarea\n          name=\"Description\"\n          placeholder=\"Description\"\n          ref={register({ required: true, max: 2, maxLength: 300 })}\n        />\n        <input\n          type=\"text\"\n          placeholder=\"Tried\"\n          name=\"Tried\"\n          ref={register({\n            required: true,\n            min: 2,\n            maxLength: 128,\n          })}\n        />\n        <input\n          type=\"text\"\n          placeholder=\"Category\"\n          name=\"Category\"\n          ref={register({ required: true, min: 2, maxLength: 128 })}\n        />\n\n        <input type=\"submit\" />\n      </form>\n\n      <div>\n        <div className=\"studentList\">\n          {student.map((student, index) => (\n            <StudentCard student={student} refreshStudent={refreshStudent} />\n          ))}\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Student;\n"]},"metadata":{},"sourceType":"module"}