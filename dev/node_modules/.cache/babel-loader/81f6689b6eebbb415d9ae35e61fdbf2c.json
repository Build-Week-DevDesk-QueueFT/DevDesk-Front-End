{"ast":null,"code":"var _jsxFileName = \"/Users/lambda_school_loaner_277/Desktop/coding/DevDesk-Front-End/dev/src/components/student/Student.js\";\nimport React, { useState, useEffect, useContext } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport StudentCard from \"../student/StudentCard\";\nimport { UserContext } from \"../../contexts/AppContext\";\nimport { axiosWithAuth } from \"../../utils/axiosWithAuth\";\nimport jwt from \"jsonwebtoken\";\n\nconst postNewStudent = (newStudent, refreshStudent) => {\n  axiosWithAuth().post(\"/api/tickets\", newStudent).then(res => {\n    console.log(res.data);\n    refreshStudent();\n  }).catch(err => {\n    console.log(err, \"Failed to post new student\");\n  });\n};\n\nconst Student = props => {\n  const token = JSON.parse(localStorage.getItem(\"token\"));\n  const secret = \"keepitsecret,keepitsafe!\";\n  let user;\n  jwt.verify(token, secret, (error, decodedToken) => {\n    user = decodedToken;\n  }); //   const [user, setUser] = useContext(UserContext);\n\n  const refreshStudent = props => {\n    axiosWithAuth().get(\"/api/tickets\").then(res => {\n      console.log(res);\n      setUser(res.data);\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n\n  useEffect(() => {\n    refreshStudent();\n  }, []);\n\n  const submitStudent = data => {\n    console.log(data);\n    postNewStudent({\n      title: props.title,\n      description: props.description,\n      tried: props.tried,\n      category: props.category\n    }, refreshStudent);\n  }; //For the forms\n\n\n  const {\n    register,\n    handleSubmit,\n    errors\n  } = useForm();\n  console.log(errors);\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Title\",\n    name: \"Title\",\n    ref: register({\n      required: true,\n      min: 2,\n      maxLength: 80\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"textarea\", {\n    name: \"Description\",\n    placeholder: \"Description\",\n    ref: register({\n      required: true,\n      max: 2,\n      maxLength: 300\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Tried\",\n    name: \"Tried\",\n    ref: register({\n      required: true,\n      min: 2,\n      maxLength: 128\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Category\",\n    name: \"Category\",\n    ref: register({\n      required: true,\n      min: 2,\n      maxLength: 128\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default Student;","map":{"version":3,"sources":["/Users/lambda_school_loaner_277/Desktop/coding/DevDesk-Front-End/dev/src/components/student/Student.js"],"names":["React","useState","useEffect","useContext","useForm","StudentCard","UserContext","axiosWithAuth","jwt","postNewStudent","newStudent","refreshStudent","post","then","res","console","log","data","catch","err","Student","props","token","JSON","parse","localStorage","getItem","secret","user","verify","error","decodedToken","get","setUser","submitStudent","title","description","tried","category","register","handleSubmit","errors","onSubmit","required","min","maxLength","max"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,UAArC,QAAuD,OAAvD;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,OAAOC,WAAP,MAAwB,wBAAxB;AACA,SAASC,WAAT,QAA4B,2BAA5B;AACA,SAASC,aAAT,QAA8B,2BAA9B;AACA,OAAOC,GAAP,MAAgB,cAAhB;;AAEA,MAAMC,cAAc,GAAG,CAACC,UAAD,EAAaC,cAAb,KAAgC;AACrDJ,EAAAA,aAAa,GACVK,IADH,CACQ,cADR,EACwBF,UADxB,EAEGG,IAFH,CAESC,GAAD,IAAS;AACbC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,IAAhB;AACAN,IAAAA,cAAc;AACf,GALH,EAMGO,KANH,CAMUC,GAAD,IAAS;AACdJ,IAAAA,OAAO,CAACC,GAAR,CAAYG,GAAZ,EAAiB,4BAAjB;AACD,GARH;AASD,CAVD;;AAYA,MAAMC,OAAO,GAAIC,KAAD,IAAW;AACzB,QAAMC,KAAK,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAX,CAAd;AACA,QAAMC,MAAM,GAAG,0BAAf;AACA,MAAIC,IAAJ;AACApB,EAAAA,GAAG,CAACqB,MAAJ,CAAWP,KAAX,EAAkBK,MAAlB,EAA0B,CAACG,KAAD,EAAQC,YAAR,KAAyB;AACjDH,IAAAA,IAAI,GAAGG,YAAP;AACD,GAFD,EAJyB,CAOzB;;AAEA,QAAMpB,cAAc,GAAIU,KAAD,IAAW;AAChCd,IAAAA,aAAa,GACVyB,GADH,CACO,cADP,EAEGnB,IAFH,CAESC,GAAD,IAAS;AACbC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACAmB,MAAAA,OAAO,CAACnB,GAAG,CAACG,IAAL,CAAP;AACD,KALH,EAMGC,KANH,CAMUY,KAAD,IAAW;AAChBf,MAAAA,OAAO,CAACC,GAAR,CAAYc,KAAZ;AACD,KARH;AASD,GAVD;;AAYA5B,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,cAAc;AACf,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMuB,aAAa,GAAIjB,IAAD,IAAU;AAC9BF,IAAAA,OAAO,CAACC,GAAR,CAAYC,IAAZ;AACAR,IAAAA,cAAc,CACZ;AACE0B,MAAAA,KAAK,EAAEd,KAAK,CAACc,KADf;AAEEC,MAAAA,WAAW,EAAEf,KAAK,CAACe,WAFrB;AAGEC,MAAAA,KAAK,EAAEhB,KAAK,CAACgB,KAHf;AAIEC,MAAAA,QAAQ,EAAEjB,KAAK,CAACiB;AAJlB,KADY,EAOZ3B,cAPY,CAAd;AASD,GAXD,CAzByB,CAqCzB;;;AACA,QAAM;AAAE4B,IAAAA,QAAF;AAAYC,IAAAA,YAAZ;AAA0BC,IAAAA;AAA1B,MAAqCrC,OAAO,EAAlD;AACAW,EAAAA,OAAO,CAACC,GAAR,CAAYyB,MAAZ;AAEA,sBACE;AAAM,IAAA,QAAQ,EAAED,YAAY,CAACE,QAAD,CAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,WAAW,EAAC,OAFd;AAGE,IAAA,IAAI,EAAC,OAHP;AAIE,IAAA,GAAG,EAAEH,QAAQ,CAAC;AAAEI,MAAAA,QAAQ,EAAE,IAAZ;AAAkBC,MAAAA,GAAG,EAAE,CAAvB;AAA0BC,MAAAA,SAAS,EAAE;AAArC,KAAD,CAJf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAOE;AACE,IAAA,IAAI,EAAC,aADP;AAEE,IAAA,WAAW,EAAC,aAFd;AAGE,IAAA,GAAG,EAAEN,QAAQ,CAAC;AAAEI,MAAAA,QAAQ,EAAE,IAAZ;AAAkBG,MAAAA,GAAG,EAAE,CAAvB;AAA0BD,MAAAA,SAAS,EAAE;AAArC,KAAD,CAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,eAYE;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,WAAW,EAAC,OAFd;AAGE,IAAA,IAAI,EAAC,OAHP;AAIE,IAAA,GAAG,EAAEN,QAAQ,CAAC;AACZI,MAAAA,QAAQ,EAAE,IADE;AAEZC,MAAAA,GAAG,EAAE,CAFO;AAGZC,MAAAA,SAAS,EAAE;AAHC,KAAD,CAJf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZF,eAsBE;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,WAAW,EAAC,UAFd;AAGE,IAAA,IAAI,EAAC,UAHP;AAIE,IAAA,GAAG,EAAEN,QAAQ,CAAC;AAAEI,MAAAA,QAAQ,EAAE,IAAZ;AAAkBC,MAAAA,GAAG,EAAE,CAAvB;AAA0BC,MAAAA,SAAS,EAAE;AAArC,KAAD,CAJf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAtBF,eA6BE;AAAO,IAAA,IAAI,EAAC,QAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA7BF,CADF;AAiCD,CA1ED;;AA4EA,eAAezB,OAAf","sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport StudentCard from \"../student/StudentCard\";\nimport { UserContext } from \"../../contexts/AppContext\";\nimport { axiosWithAuth } from \"../../utils/axiosWithAuth\";\nimport jwt from \"jsonwebtoken\";\n\nconst postNewStudent = (newStudent, refreshStudent) => {\n  axiosWithAuth()\n    .post(\"/api/tickets\", newStudent)\n    .then((res) => {\n      console.log(res.data);\n      refreshStudent();\n    })\n    .catch((err) => {\n      console.log(err, \"Failed to post new student\");\n    });\n};\n\nconst Student = (props) => {\n  const token = JSON.parse(localStorage.getItem(\"token\"));\n  const secret = \"keepitsecret,keepitsafe!\";\n  let user;\n  jwt.verify(token, secret, (error, decodedToken) => {\n    user = decodedToken;\n  });\n  //   const [user, setUser] = useContext(UserContext);\n\n  const refreshStudent = (props) => {\n    axiosWithAuth()\n      .get(\"/api/tickets\")\n      .then((res) => {\n        console.log(res);\n        setUser(res.data);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  useEffect(() => {\n    refreshStudent();\n  }, []);\n\n  const submitStudent = (data) => {\n    console.log(data);\n    postNewStudent(\n      {\n        title: props.title,\n        description: props.description,\n        tried: props.tried,\n        category: props.category,\n      },\n      refreshStudent\n    );\n  };\n  //For the forms\n  const { register, handleSubmit, errors } = useForm();\n  console.log(errors);\n\n  return (\n    <form onSubmit={handleSubmit(onSubmit)}>\n      <input\n        type=\"text\"\n        placeholder=\"Title\"\n        name=\"Title\"\n        ref={register({ required: true, min: 2, maxLength: 80 })}\n      />\n      <textarea\n        name=\"Description\"\n        placeholder=\"Description\"\n        ref={register({ required: true, max: 2, maxLength: 300 })}\n      />\n      <input\n        type=\"text\"\n        placeholder=\"Tried\"\n        name=\"Tried\"\n        ref={register({\n          required: true,\n          min: 2,\n          maxLength: 128,\n        })}\n      />\n      <input\n        type=\"text\"\n        placeholder=\"Category\"\n        name=\"Category\"\n        ref={register({ required: true, min: 2, maxLength: 128 })}\n      />\n\n      <input type=\"submit\" />\n    </form>\n  );\n};\n\nexport default Student;\n"]},"metadata":{},"sourceType":"module"}